#!/usr/bin/env ruby

require_relative '../lib/hyaslide'

require 'rack'
require 'rouge'
require 'fssm'
require 'eventmachine'
require 'redcarpet'
require 'optparse'

dir = '.'

OptParse.new do |opt|
  opt.on('-d DIR', '--dir=DIR') do |v|
    dir = v
  end

  opt.parse(ARGV)
end

class SlideLoader
  def initialize(dir)
    @dir = dir
  end

  def self.load_slide(dir)
    markdown = Redcarpet::Markdown.new(Redcarpet::Render::Hyaslide, fenced_code_blocks: true)
    File.open("#{dir}/pages/pages.rb", "w+") do |f|
      data = File.read("#{dir}/slide.md")
      f.write markdown.render(data)
    end
  end

  def run
    SlideLoader.load_slide(@dir)

    EM.defer do
      FSSM.monitor("#{@dir}", "slide.md") do
        update {|base, relative| SlideLoader.load_slide }
        delete {|base, relative|}
        create {|base, relative|}
      end
    end
  end
end

Dir.mkdir dir + '/pages' unless Dir.exist? dir + '/pages'

SlideLoader.new(dir).run

Rack::Handler::WEBrick.run Opal::Server.new {|s|
  s.append_path 'app'
  s.append_path dir + '/pages'
  s.append_path 'images'
  s.append_path 'css'
  s.append_path 'fonts'

  s.debug = true
  s.main = 'application'
  s.index_path = 'index.html.haml'
}
